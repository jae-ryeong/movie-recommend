spring:
  datasource:
    url: jdbc:mysql://localhost:3306/movierecommend_db?createDatabaseIfNotExist=true
    username: root
    password: 1234
    driver-class-name: com.mysql.cj.jdbc.Driver


  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: movie-group     # Consumer Group ID
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer # <-- 이 부분을 변경
      properties:
        spring.json.trusted.packages: '*'
      enable-auto-commit: true
      max-poll-records: 500 # Number of messages to receive at once
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
     # value-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      batch-size: 16384  # Default 16KB, maximum size for one batch
      linger-ms: 10      # Max linger time (ms) → Collect and send during this time
      buffer-memory: 33554432  # 32MB buffer

  elasticsearch:
    uris: http://localhost:9200
    username: elastic
    password: sznrsjxoy7-s7dTkb08O

logging:
  level:
    org.hibernate.SQL: debug   # Hibernate SQL log
    org.springframework.kafka: info  # Kafka log
    org.springframework.data.elasticsearch: info  # Elasticsearch log